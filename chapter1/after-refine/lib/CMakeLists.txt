set(VIDEORENTAL_INCLUDE_DIR ../include)
set(PUBLIC_HEADERS
	${VIDEORENTAL_INCLUDE_DIR}/drama.h
	${VIDEORENTAL_INCLUDE_DIR}/invoice.h
	${VIDEORENTAL_INCLUDE_DIR}/performance.h
	${VIDEORENTAL_INCLUDE_DIR}/enrich-performance.h
	${VIDEORENTAL_INCLUDE_DIR}/play.h
	${VIDEORENTAL_INCLUDE_DIR}/calculator-factory.h
	${VIDEORENTAL_INCLUDE_DIR}/icalculator.h
	${VIDEORENTAL_INCLUDE_DIR}/base-calculator.h
	${VIDEORENTAL_INCLUDE_DIR}/tragedy-calculator.h
	${VIDEORENTAL_INCLUDE_DIR}/comedy-calculator.h
	${VIDEORENTAL_INCLUDE_DIR}/statement.h
	${VIDEORENTAL_INCLUDE_DIR}/statement-data.h
	${VIDEORENTAL_INCLUDE_DIR}/statement-data-generator.h
)

set(VIDEORENTAL_SOURCES
	drama.cpp
	calculator-factory.cpp
	base-calculator.cpp
	tragedy-calculator.cpp
	comedy-calculator.cpp
	statement.cpp
	statement-data-generator.cpp
)

if(BUILD_SHARED_LIBS)
	set(SHARED_LIB ${PROJECT_NAME}_lib)
	add_library(${SHARED_LIB} SHARED ${PUBLIC_HEADERS} ${VIDEORENTAL_SOURCES})
	set_target_properties(${SHARED_LIB} PROPERTIES
		OUTPUT_NAME videorental
		VERSION ${PROJECT_VERSION}
		POSITION_INDEPENDENT_CODE ${BUILD_SHARED_LIBS}
	)

	# Set library's runtime search path on OSX
	if(APPLE)
		set_target_properties(${SHARED_LIB} PROPERTIES INSTALL_RPATH "@loader_path/.")
	endif()

	target_include_directories(${SHARED_LIB} PUBLIC
		$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
		$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/${VIDEORENTAL_INCLUDE_DIR}>
		$<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
	)

	list(APPEND CMAKE_TARGETS ${SHARED_LIB})
endif()

if(BUILD_STATIC_LIBS)
	set(STATIC_LIB ${PROJECT_NAME}_static)
	add_library(${STATIC_LIB} STATIC ${PUBLIC_HEADERS} ${VIDEORENTAL_SOURCES})

	set_target_properties(${STATIC_LIB} PROPERTIES
		OUTPUT_NAME videorental
		VERSION ${PROJECT_VERSION}
	)

	# Set library's runtime search path on OSX
	if(APPLE)
		set_target_properties(${STATIC_LIB} PROPERTIES INSTALL_RPATH "@loader_path/.")
	endif()

	target_include_directories(${STATIC_LIB} PUBLIC
		$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
		$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/${VIDEORENTAL_INCLUDE_DIR}>
		$<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
	)

	list(APPEND CMAKE_TARGETS ${STATIC_LIB})
endif()

if(BUILD_OBJECT_LIBS)
	set(OBJECT_LIB ${PROJECT_NAME}_object)
	add_library(${OBJECT_LIB} OBJECT ${PUBLIC_HEADERS} ${VIDEORENTAL_SOURCES})

	set_target_properties(${OBJECT_LIB} PROPERTIES
		OUTPUT_NAME videorental
		VERSION ${PROJECT_VERSION}
		POSITION_INDEPENDENT_CODE ${BUILD_SHARED_LIBS}
	)

	# Set library's runtime search path on OSX
	if(APPLE)
		set_target_properties(${OBJECT_LIB} PROPERTIES INSTALL_RPATH "@loader_path/.")
	endif()

	target_include_directories(${OBJECT_LIB} PUBLIC
		$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
		$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/${VIDEORENTAL_INCLUDE_DIR}>
		$<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
	)

	list(APPEND CMAKE_TARGETS ${OBJECT_LIB})
endif()

install(TARGETS ${CMAKE_TARGETS} ${INSTALL_EXPORT}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	OBJECTS DESTINATION ${CMAKE_INSTALL_LIBDIR}
)
